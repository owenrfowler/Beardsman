{% comment %}
  == Vendor ==
{% endcomment %}
{% assign showVendor = false %}
{% if collection.title == beard-oils %}
  {% assign showVendor = true %}
{% endif %}

<div id="product" class="{{ product.handle }}">
  
  <div id="page-header">
    <div class="content">
      <div class="introduction">
        {% if showVendor %}
        <h2 itemprop="brand">{{ product.vendor }}</h2>
        {% endif %}
        <h1 itemprop="model">{{ product.title }} </h1>
      </div>
    </div>  
  </div>

  <div id="page-body">
    <div class="content">
      <div id="product-images">
        {% comment %}
          Display Featured Image for Product
          See Shopify Image Spec for image size references - assume uploaded image is 2048*2048
        {% endcomment %}
        <!-- Begin featured image -->

        <!-- End product image -->
        <div class="large"></div>
        <div class="viewport">
          {% for image in product.images %}
          <a href="{{ image.src | product_img_url: 'master' }}" title="{{ image.alt | escape }}">
            <img class="small" src="{{ image.src | product_img_url: 'master' }}" title="{{ image.alt | escape }}" alt="{{ image.alt | escape }}" />
          </a>
          {% endfor %}
        </div>
        <ul>
          <li class="zoom"><a href="#">zoomin</a></li>
        </ul>

      </div><!-- product-images -->

{% comment %}          {% if settings.enable_product_image_zoom %}
          <div class="image span2{% cycle 'last-in-row': '', '', ' last-in-row' %}">
            <a href="{{ image | product_img_url: '1024x1024' }}" class="cloud-zoom-gallery">
              <img src="{{ image | product_img_url: 'medium' }}" alt="{{ image.alt | escape }}" />
            </a>
          </div>
          {% else %}
          <div class="image span2{% cycle 'last-in-row': '', '', ' last-in-row' %}">
            <a href="{{ image | product_img_url: '1024x1024' }}" data-original-image="{{ image | product_img_url: '1024x1024' }}">
              <img src="{{ image | product_img_url: 'medium' }}" alt="{{ image.alt | escape }}" />
            </a>
          </div>
          {% endif %}{% endcomment %}

    
    <!-- Begin description -->
      <div class="text">
        
        {% assign variant = product.selected_or_first_available_variant %}
    
          <h2 class="price" id="price-preview">{{ variant.price | money }}{% if variant.price < variant.compare_at_price %} <del>{{ variant.compare_at_price | money }}</del>{% endif %}</h2>
            
        {% assign hide_default_title = false %}
        {% if product.variants.size == 1 and product.variants.first.title contains 'Default' %}
          {% assign hide_default_title = true %}
        {% endif %}
              
        <form id="add-item-form" action="/cart/add" method="post" class="variants clearfix">
          
          <!-- Begin product options -->
          <div class="product-options {% if hide_default_title %}no-options {% endif %}">

            <div class="select clearfix"{% if hide_default_title %} style="display:none"{% endif %}>
              <select id="product-select" name="id">
                {% for variant in product.variants %}
                <option value="{{ variant.id }}"{% if variant == product.selected_or_first_available_variant %} selected="selected" {% endif %}>{{ variant.title }} - {{ variant.price | money }}</option>
                {% endfor %}
              </select>
            </div>

            {% if settings.display_quantity_dropdown %}
            <div class="selector-wrapper">
              <label>{{ 'products.product.quantity' | t }}</label>
              <input id="quantity" type="number" name="quantity" value="1" class="tc item-quantity" />
            </div>
            {% endif %}

            <div class="purchase-section{% if product.variants.size > 1 %} multiple{% endif %}">
              <div class="purchase">
                {% unless product.available %}
                <p>{{ 'products.product.sold_out_html' | t }}</p>
                {% else %}
                <div class="button">
                  <input type="submit" id="add-to-cart" class="btn addtocart" name="add" value="{{ 'products.product.add_to_cart' | t }}" />
                </div>
                <div id="cart-animation" style="display:none">1</div>
                {% endunless %}
              </div>
            </div>
          </div>
          <!-- End product options -->

        </form>

        <div class="product-description">
          {{ product.description }}
        </div>

      </div><!-- .product-details -->
      <!-- End description -->
    {% comment %}<div class="span12"><div id="shopify-product-reviews" data-id="{{product.id}}">{{ product.metafields.spr.reviews }}</div></div>
    </div>{% endcomment %}

    <!-- Begin related product -->
      {% if settings.show_related_products %}
        {% include 'related-products' %}
      {% endif %}

    </div><!-- .content -->
  </div><!-- #page-body -->
</div> 

<div style="display:none" id="preloading">
{% for image in product.images offset: 1 %}
{{ image | product_img_url: '1024x1024' | img_tag }}
{% endfor %}
</div>
  
  <script>
  var selectCallback = function(variant, selector) {
    if (variant && variant.featured_image) {
      var newImage = variant.featured_image; // New image object.
      var mainImageDomEl = jQuery('.featured img')[0]; // DOM element of main image we need to swap.
      Shopify.Image.switchImage(newImage, mainImageDomEl, switchImage); // Define switchImage (the callback) in your theme's JavaScript file.
    }
    if (variant && variant.available) {
      jQuery('#add-to-cart').removeAttr('disabled').removeClass('disabled'); // remove unavailable class from add-to-cart button, and re-enable button
      if(variant.price < variant.compare_at_price){
        jQuery('#price-preview').html(Shopify.formatMoney(variant.price, "{{ shop.money_format }}") + " <del>" + Shopify.formatMoney(variant.compare_at_price, "{{ shop.money_format }}") + "</del>");
      } else {
        jQuery('#price-preview').html(Shopify.formatMoney(variant.price, "{{ shop.money_format }}"));
      }
    } else {
      jQuery('#add-to-cart').addClass('disabled').attr('disabled', 'disabled'); // set add-to-cart button to unavailable class and disable button
      var message = variant ? {{ 'products.product.sold_out_html' | t | json }} : {{ 'products.product.unavailable_html' | t | json }};
      jQuery('#price-preview').html(message);
    }
  };
  
  jQuery(document).ready(function($){
    new Shopify.OptionSelectors("product-select", { product: {{ product | json }}, onVariantSelected: selectCallback, enableHistoryState: true });

    // Add label if only one product option and it isn't 'Title'.
    {% if product.options.size == 1 and product.options.first != 'Title' %}
      $('.selector-wrapper:eq(0)').prepend('<label>{{ product.options.first | escape }}</label>');
    {% endif %}

  });
  </script>

